name: Build Wazuh Agent Packages - DEB|RPM - amd64|i386|arm64|armhf
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Wazuh branch used while building a package'
        required: false
        default: master
      arch:
        type: choice
        description: 'Architecture of the package [amd64, i386, arm64, armhf]'
        required: true
        options:
          - amd64
          - i386
          - arm64
          - armhf
      package-format:
        type: choice
        description: 'Package format [deb, rpm]'
        required: true
        options:
          - deb
          - rpm
      revision:
        description: |
          'Set the value to "1" for packages in release format.
          You can also add other values, such as issue numbers.
          By default, it is set to "0" for development.'
        required: false
      runner-machine:
        type: choice
        description: 'Required runner type to build the package'
        required: true
        options:
          - ubuntu-latest
          - self-hosted-arm

  workflow_call:
    inputs:
      branch:
        description: 'Wazuh branch used while building a package'
        required: false
        default: master
        type: string
      arch:
        type: string
        description: 'Architecture of the package [amd64, i386, arm6, armhf]'
        required: true
      package-format:
        type: string
        description: 'Package format [deb, rpm]'
        required: true
      revision:
        type: string
        description: 'Build packages with release format'
        required: false
      runner-machine:
        type: string
        description: 'Required runner type to build the package'
        required: true

jobs:
  Build-agent-linux-packages:
    if: |
      (${{ inputs.runner-machine == 'ubuntu-latest' }} && (${{ inputs.arch == 'amd64' }} || ${{ inputs.arch == 'i386' }})) ||
      (${{ inputs.runner-machine == 'self-hosted-arm' }} && (${{ inputs.arch == 'arm64' }} || ${{ inputs.arch == 'armhf' }}))
    runs-on: ${{ inputs.runner-machine }}
    name: Build ${{ inputs.package-format }} wazuh-agent on ${{ inputs.arch }}

    steps:
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v4

      - name: Set tag and container name
        run: |
          VERSION=$(sed 's/^v\([0-9]*\.[0-9]*\.[0-9]*\)/\1/' $GITHUB_WORKSPACE/src/VERSION)
          if [ "${{ inputs.branch }}" == "master" ]; then echo "TAG=$VERSION" >> $GITHUB_ENV;
          else echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV; fi
          echo "CONTAINER_NAME=pkg_${{ inputs.package-format }}_agent_builder_${{ inputs.arch }}" >> $GITHUB_ENV

      - name: Download docker image for package building
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/pull_image_from_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} $CONTAINER_NAME ${{ env.TAG }}

      - name: Build ${{ inputs.package-format }} wazuh-agent on ${{ inputs.arch }}
        working-directory: packages
        run: |
          REVISION=${{ inputs.revision }}
          if [ -z "$REVISION" ]; then REVISION=0; fi
          bash generate_package.sh -b ${{ inputs.branch }} -j $(nproc) -t agent -s /tmp -a ${{ inputs.arch }} --dont-build-docker --tag ${{ env.TAG }} -r $REVISION --package-format ${{ inputs.package-format }}

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_SECRET_KEY }}
          aws-region: us-east-1

      - name: Upload package to S3
        run: |
          aws s3 cp /tmp/*agent* s3://packages-dev.internal.wazuh.com/development/wazuh/

